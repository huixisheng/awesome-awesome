(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{292:function(t,e,a){"use strict";a.r(e);var n=a(0),i=Object(n.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._m(1),t._m(2),a("p",[t._v("One possible Hamiltonian cycle through every vertex of a\ndodecahedron is shown in red â€“ like all platonic solids, the\ndodecahedron is Hamiltonian.")]),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),a("ul",[a("li",[a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Hamiltonian_path",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hamiltonian path on Wikipedia"),a("OutboundLink")],1)]),a("li",[a("a",{attrs:{href:"https://www.youtube.com/watch?v=dQr4wZCiJJ4&list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hamiltonian path on YouTube"),a("OutboundLink")],1)]),a("li",[a("a",{attrs:{href:"https://www.geeksforgeeks.org/backtracking-set-7-hamiltonian-cycle/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hamiltonian cycle on GeeksForGeeks"),a("OutboundLink")],1)])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"hamiltonian-path"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hamiltonian-path","aria-hidden":"true"}},[this._v("#")]),this._v(" Hamiltonian Path")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[a("strong",[t._v("Hamiltonian path")]),t._v(" (or "),a("strong",[t._v("traceable path")]),t._v(") is a path in an\nundirected or directed graph that visits each vertex exactly once.\nA "),a("strong",[t._v("Hamiltonian cycle")]),t._v(" (or "),a("strong",[t._v("Hamiltonian circuit")]),t._v(") is a\nHamiltonian path that is a cycle. Determining whether such paths\nand cycles exist in graphs is the "),a("strong",[t._v("Hamiltonian path problem")]),t._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://upload.wikimedia.org/wikipedia/commons/6/6c/Hamiltonian_path_3d.svg",alt:"Hamiltonian cycle"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"naive-algorithm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#naive-algorithm","aria-hidden":"true"}},[this._v("#")]),this._v(" Naive Algorithm")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Generate all possible configurations of vertices and print a\nconfiguration that satisfies the given constraints. There\nwill be "),e("code",[this._v("n!")]),this._v(" (n factorial) configurations.")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("while there are untried configurations\n{\n   generate the next configuration\n   if ( there are edges between two consecutive vertices of this\n      configuration and there is an edge from the last vertex to \n      the first ).\n   {\n      print this configuration;\n      break;\n   }\n}\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"backtracking-algorithm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#backtracking-algorithm","aria-hidden":"true"}},[this._v("#")]),this._v(" Backtracking Algorithm")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Create an empty path array and add vertex "),e("code",[this._v("0")]),this._v(" to it. Add other\nvertices, starting from the vertex "),e("code",[this._v("1")]),this._v(". Before adding a vertex,\ncheck for whether it is adjacent to the previously added vertex\nand not already added. If we find such a vertex, we add the\nvertex as part of the solution. If we do not find a vertex\nthen we return false.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references","aria-hidden":"true"}},[this._v("#")]),this._v(" References")])}],!1,null,null,null);e.default=i.exports}}]);