(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{255:function(e,t,r){"use strict";r.r(t);var o=r(0),n=Object(o.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),r("p",[r("strong",[e._v("Context: "),r("router-link",{attrs:{to:"/"}},[e._v("frontend-dev-bookmarks")]),e._v(" / Compatibility")],1)]),r("p",[e._v("Development of websites optimized for viewing on smartphone and tablet devices.")]),r("p",[r("a",{attrs:{href:"http://frontend.directory/",target:"_blank",rel:"noopener noreferrer"}},[r("img",{attrs:{src:"https://img.shields.io/badge/frontend-directory-blue.svg?style=flat-square",alt:"frontend.directory"}}),r("OutboundLink")],1),r("a",{attrs:{href:"https://gitter.im/dypsilon/frontend-dev-bookmarks",target:"_blank",rel:"noopener noreferrer"}},[r("img",{attrs:{src:"https://img.shields.io/gitter/room/dypsilon/frontend-dev-bookmarks.svg?style=flat-square&maxAge=2592000",alt:"Gitter"}}),r("OutboundLink")],1),r("a",{attrs:{href:"https://twitter.com/FrontendDir",target:"_blank",rel:"noopener noreferrer"}},[r("img",{attrs:{src:"https://img.shields.io/badge/follow-twitter-55acee.svg?style=flat-square",alt:"Twitter"}}),r("OutboundLink")],1)]),r("hr"),r("ul",[r("li",[r("strong",[e._v("Emulation")]),e._v(": Tools for emulating features of mobile devices on a desktop.\n"),r("ul",[r("li",[r("strong",[r("a",{attrs:{href:"http://www.responsinator.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Responsinator"),r("OutboundLink")],1)]),e._v(": Quickly test any website in popular resolutions.")]),r("li",[r("strong",[r("a",{attrs:{href:"https://developers.google.com/web/tools/chrome-devtools/iterate/device-mode/?hl=en",target:"_blank",rel:"noopener noreferrer"}},[e._v("Simulate Mobile Devices with Chrome Developer Tools"),r("OutboundLink")],1)]),e._v(": Use Chrome DevTools' Device Mode to build mobile-first, fully responsive web sites. Learn how to use it to simulate a wide range of devices and their capabilities.")]),r("li",[r("strong",[r("a",{attrs:{href:"https://github.com/davidcalhoun/touche",target:"_blank",rel:"noopener noreferrer"}},[e._v("Touché"),r("OutboundLink")],1)]),e._v(": Touché: bringing touch events to non-touch browsers (how touching!). No dependencies. No code bloat.")]),r("li",[r("strong",[r("a",{attrs:{href:"http://mwbrooks.github.io/thumbs.js/",target:"_blank",rel:"noopener noreferrer"}},[e._v("thumbs.js"),r("OutboundLink")],1)]),e._v(": Adds touch support to your browser.")])])]),r("li",[r("strong",[e._v("Gestures")]),e._v(": Resources for working with touch mechanics (what your fingers do on the screen) and touch activities (results of specific gestures).\n"),r("ul",[r("li",[r("strong",[r("a",{attrs:{href:"http://hammerjs.github.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hammer.js"),r("OutboundLink")],1)]),e._v(": Hammer helps you add support for touch gestures to your page, and remove the 300ms delay from clicks.")]),r("li",[r("strong",[r("a",{attrs:{href:"https://www.google.com/design/spec/patterns/gestures.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Introduction to Gestures"),r("OutboundLink")],1)]),e._v(": Descriptions of different gestures an their meanings.")]),r("li",[r("strong",[r("a",{attrs:{href:"https://github.com/jquery/PEP",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pointer Events Polyfill"),r("OutboundLink")],1)]),e._v(": PEP polyfills pointer events in all browsers that haven't yet implemented them, providing a unified, responsive input model for all devices and input types.")]),r("li",[r("strong",[r("a",{attrs:{href:"https://github.com/HotStudio/touchy",target:"_blank",rel:"noopener noreferrer"}},[e._v("Touchy"),r("OutboundLink")],1)]),e._v(": Touchy is a jQuery plugin for managing touch events on W3C-compliant browsers, such as Mobile Safari or Android Browser, or any browser that supports the ontouchstart, ontouchmove and ontouchend events.")]),r("li",[r("strong",[r("a",{attrs:{href:"http://jgestures.codeplex.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("jGestures"),r("OutboundLink")],1)]),e._v(": A jQuery plugin that enables you to add gesture events just like native jQuery events. Includes event substitution for mouse events.")])])]),r("li",[r("strong",[e._v("Layout")]),e._v(": The way in which the parts of the website are arranged or laid out.\n"),r("ul",[r("li",[r("strong",[r("a",{attrs:{href:"https://github.com/jakiestfu/Snap.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("Snap.js"),r("OutboundLink")],1)]),e._v(": A Library for creating beautiful mobile shelfs (side menus) in Javascript.")]),r("li",[r("strong",[r("a",{attrs:{href:"https://github.com/thebird/swipe",target:"_blank",rel:"noopener noreferrer"}},[e._v("Swipe"),r("OutboundLink")],1)]),e._v(": Swipe is the most accurate touch slider.")]),r("li",[r("strong",[r("a",{attrs:{href:"http://idangero.us/swiper/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Swiper"),r("OutboundLink")],1)]),e._v(": Swiper is a free mobile touch slider with hardware accelerated transitions and  native behavior. It is intended to be used in mobile websites, mobile web apps, and mobile native/hybrid apps.")]),r("li",[r("strong",[r("a",{attrs:{href:"https://github.com/filamentgroup/jqm-pagination",target:"_blank",rel:"noopener noreferrer"}},[e._v("jqm-pagination"),r("OutboundLink")],1)]),e._v(": A jQuery Mobile plugin for sequential pagination between pages with support for touch, mouse, and keyboard.")]),r("li",[r("strong",[r("a",{attrs:{href:"https://github.com/max-power/swipeslide",target:"_blank",rel:"noopener noreferrer"}},[e._v("swipeslide"),r("OutboundLink")],1)]),e._v(": A Zepto Plugin for iOS like swipe navigation.")])])]),r("li",[r("strong",[e._v("Scrolling")]),e._v(": Native scrolling of the browsers doesn't always fit for mobile websites. There are resources which solve this problem.\n"),r("ul",[r("li",[r("strong",[r("a",{attrs:{href:"https://github.com/azoff/overscroll",target:"_blank",rel:"noopener noreferrer"}},[e._v("Overscroll"),r("OutboundLink")],1)]),e._v(": Overscroll is a jQuery plug-in that mimics the iphone/ipad scrolling experience in a browser.")]),r("li",[r("strong",[r("a",{attrs:{href:"https://www.filamentgroup.com/lab/overthrow.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Overthrow"),r("OutboundLink")],1)]),e._v(": A framework-independent, overflow: auto polyfill for use in responsive design.")]),r("li",[r("strong",[r("a",{attrs:{href:"https://github.com/zynga/scroller",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zynga Scroller"),r("OutboundLink")],1)]),e._v(": A pure logic component for scrolling/zooming. It is independent of any specific kind of rendering or event system.")]),r("li",[r("strong",[r("a",{attrs:{href:"http://iscrolljs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("iScroll"),r("OutboundLink")],1)]),e._v(": iScroll is a high performance, small footprint, dependency free, multi-platform javascript scroller.")]),r("li",[r("strong",[r("a",{attrs:{href:"http://pep.briangonzalez.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("jQuery.pep.js"),r("OutboundLink")],1)]),e._v(": A lightweight plugin for kinetic-drag on mobile/desktop.")]),r("li",[r("strong",[r("a",{attrs:{href:"http://jswipekinetic.codeplex.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("jSwipeKinetic"),r("OutboundLink")],1)]),e._v(": A jQuery plugin that enables you to add kinetic scrolling on your touch optimized projects. jSwipeKinetic is build on top of jGestures.")]),r("li",[r("strong",[r("a",{attrs:{href:"https://github.com/visiongeist/pull-to-refresh-js",target:"_blank",rel:"noopener noreferrer"}},[e._v("pull-to-refresh.js"),r("OutboundLink")],1)]),e._v(": This plugin enables a pull-to-refresh functionality in mobile safari for scrollable block elements with native scrolling on iOS.")])])]),r("li",[r("strong",[e._v("Tap Acceleration")]),e._v(': Every touch-based mobile browser has an artificial ~300ms delay between you tapping a thing on the screen and the browser considering it a "click", but there are ways to work around this behavior.\n'),r("ul",[r("li",[r("strong",[r("a",{attrs:{href:"https://developers.google.com/web/updates/2013/12/300ms-tap-delay-gone-away",target:"_blank",rel:"noopener noreferrer"}},[e._v("300ms Tap Delay, Gone Away"),r("OutboundLink")],1)]),e._v(": An article by Google describing the 300ms delay and how Chrome 32+ on Anrdoid deals with it.")]),r("li",[r("strong",[r("a",{attrs:{href:"http://hammerjs.github.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hammer.js"),r("OutboundLink")],1)]),e._v(": Hammer helps you add support for touch gestures to your page, and remove the 300ms delay from clicks.")]),r("li",[r("strong",[r("a",{attrs:{href:"http://cheeaun.github.io/tappable/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tappable"),r("OutboundLink")],1)]),e._v(": Tappable is a simple, standalone library to invoke the tap event for touch-friendly web browsers.")]),r("li",[r("strong",[r("a",{attrs:{href:"https://github.com/ftlabs/fastclick",target:"_blank",rel:"noopener noreferrer"}},[e._v("fastclick"),r("OutboundLink")],1)]),e._v(": FastClick is a simple, easy-to-use library for eliminating the 300ms delay between a physical tap and the firing of a click event on mobile browsers.")])])]),r("li",[r("strong",[e._v("Touch Keyboard")]),e._v(": Almost all modern smartphones provide a touch based keyboard for text input. There are some tactics to influence them and work around their quirks.\n"),r("ul",[r("li",[r("strong",[r("a",{attrs:{href:"https://www.smashingmagazine.com/2013/08/guide-to-designing-touch-keyboards-with-cheat-sheet/",target:"_blank",rel:"noopener noreferrer"}},[e._v("A Guide To Designing Touch Keyboards"),r("OutboundLink")],1)]),e._v(": In this article, we will look a bit deeper into the usability issues surrounding touch keyboards, including five design guidelines that will alleviate some of these pains.")])])]),r("li",[r("strong",[e._v("Working With Sensors")]),e._v(": All mobile devices are equipped with sensors like gyroscope, accelerometers, photometers, magnetometers and so on. Some of them are accessible in a browser through JavaScript.\n"),r("ul",[r("li",[r("strong",[r("a",{attrs:{href:"http://www.html5rocks.com/en/tutorials/device/orientation/",target:"_blank",rel:"noopener noreferrer"}},[e._v("This End Up: Using Device Orientation"),r("OutboundLink")],1)]),e._v(": In this article, we’ll take a look at device orientation and motion events, and use CSS to rotate an image based on the orientation of the device.")]),r("li",[r("strong",[r("a",{attrs:{href:"http://lenticular.attasi.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("lenticular.js"),r("OutboundLink")],1)]),e._v(": Tilt-controlled images in the browser.")])])])]),r("hr"),e._m(1),e._m(2),r("p",[e._v("Please provide a link back to this repository. This is not necessary for GitHub forks.")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"mobile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mobile","aria-hidden":"true"}},[this._v("#")]),this._v(" Mobile")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"license"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#license","aria-hidden":"true"}},[this._v("#")]),this._v(" License")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("a",{attrs:{rel:"license",href:"http://creativecommons.org/licenses/by/4.0/"}},[t("img",{staticStyle:{"border-width":"0"},attrs:{alt:"Creative Commons License",src:"https://i.creativecommons.org/l/by/4.0/88x31.png"}})]),t("br"),this._v("This work is licensed under a "),t("a",{attrs:{rel:"license",href:"http://creativecommons.org/licenses/by/4.0/"}},[this._v("Creative Commons Attribution 4.0 International License")]),this._v(".")])}],!1,null,null,null);t.default=n.exports}}]);